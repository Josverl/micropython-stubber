# .coveragerc to control coverage.py

[html]
directory = coverage

[run]
branch = True
source = 
    src
    board
    minified
omit =
    */commands/__init__.py	
    */boot.py
    */main.py
    */logging.py
    */make_stub_files.py
    */micropip.py


[report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug
    self._log.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    #
    if __name__ == "__main__" or isMicroPython():
    main()
    # utility functions
    show_help()
    isMicroPython()
    read_path()

    #unreachable 
    info["release"] = "2.0.0" 
    if arch

    # Micropython detection
    except (NotImplementedError, SyntaxError): 

    # catch error 
    except (OSError, KeyError):
    except (OSError, AttributeError):


ignore_errors = True

