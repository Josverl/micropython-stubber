From aa2aeec826506ce2e7aa3b5138b9a2257d823b41 Mon Sep 17 00:00:00 2001
From: Braden Mars <BradenM@users.noreply.github.com>
Date: Tue, 16 Jul 2019 17:00:35 -0500
Subject: [PATCH] feat: Support for ESP8266 without SPIRam

---
 createstubs.py                  | 22 ++++++++--------------
 patches/esp8266-no-spiram.patch | 25 +++++++++++++------------
 2 files changed, 21 insertions(+), 26 deletions(-)

diff --git a/createstubs.py b/createstubs.py
index cb5765b..162dcc1 100644
--- a/createstubs.py
+++ b/createstubs.py
@@ -46,8 +46,8 @@ class Stubber():
             self.ensure_folder(path + "/")
         except:
             self._log.error("error creating stub folder {}".format(path))
-        self.problematic = ["upysh", "webrepl_setup", "http_client", "http_client_ssl", "http_server", "http_server_ssl"]
-        self.excluded = ["webrepl", "_webrepl", "webrepl_setup"]
+        self.problematic = ["upysh", "webrepl", "_webrepl", "webrepl_setup", "http_client", "http_client_ssl", "http_server", "http_server_ssl"]
+        self.excluded = [ "port_diag","example_sub_led.py","example_pub_button.py"]
         # there is no option to discover modules from upython, need to hardcode
         # below contains the combines modules from  Micropython ESP8622, ESP32 and Loboris Modules
         self.modules = ['_boot', '_onewire', '_thread', '_webrepl', 'ak8963', 'apa102', 'apa106', 'array', 'binascii', 'btree', 'builtins', 'upip', #do upip early
@@ -94,9 +94,9 @@ class Stubber():
             if self.include_nested:
                 self.include_nested = gc.mem_free() > 3200
 
-            if module_name.startswith("_") and module_name != '_thread':
-                self._log.warning("Skip module: {:<20}        : internal ".format(module_name))
-                continue
+            # if module_name.startswith("_") and module_name != '_thread':
+            #     self._log.warning("Skip module: {:<20}        : internal ".format(module_name))
+            #     continue
             if module_name in self.problematic:
                 self._log.warning("Skip module: {:<20}        : Known problematic".format(module_name))
                 continue
@@ -122,19 +122,13 @@ class Stubber():
 
     def create_module_stub(self, module_name: str, file_name: str = None):
         "Create a Stub of a single python module"
-        if module_name.startswith("_") and module_name != '_thread':
-            self._log.warning("SKIPPING internal module:{}".format(module_name))
-            return
 
-        if module_name in self.problematic:
-            self._log.warning("SKIPPING problematic module:{}".format(module_name))
-            return
+        if file_name is None: 
+            file_name = module_name.replace('.', '/') + ".py"
+
         if '/' in module_name:
             #for nested modules
             self.ensure_folder(file_name)
-            module_name = module_name.replace('/', '.')
-            if not self.include_nested:
-                self._log.warning("SKIPPING nested module:{}".format(module_name))
                 return
 
         if file_name is None:
diff --git a/patches/esp8266-no-spiram.patch b/patches/esp8266-no-spiram.patch
index 22e7b56..9d4e6be 100644
--- a/patches/esp8266-no-spiram.patch
+++ b/patches/esp8266-no-spiram.patch
@@ -1,18 +1,16 @@
+From 64a15f975586c09584edb61fb391e16256385a16 Mon Sep 17 00:00:00 2001
+From: Braden Mars <BradenM@users.noreply.github.com>
+Date: Tue, 16 Jul 2019 17:00:35 -0500
+Subject: [PATCH] feat: Support for ESP8266 without SPIRam
+
+---
+ createstubs.py | 15 ++++++---------
+ 1 file changed, 6 insertions(+), 9 deletions(-)
+
 diff --git a/createstubs.py b/createstubs.py
-index cb5765b..17896ae 100644
+index cb5765b..0b3a62f 100644
 --- a/createstubs.py
 +++ b/createstubs.py
-@@ -46,8 +46,8 @@ class Stubber():
-             self.ensure_folder(path + "/")
-         except:
-             self._log.error("error creating stub folder {}".format(path))
--        self.problematic = ["upysh", "webrepl_setup", "http_client", "http_client_ssl", "http_server", "http_server_ssl"]
--        self.excluded = ["webrepl", "_webrepl", "webrepl_setup"]
-+        self.problematic = ["upysh", "webrepl", "_webrepl", "webrepl_setup", "http_client", "http_client_ssl", "http_server", "http_server_ssl"]
-+        self.excluded = [ "port_diag","example_sub_led.py","example_pub_button.py"]
-         # there is no option to discover modules from upython, need to hardcode
-         # below contains the combines modules from  Micropython ESP8622, ESP32 and Loboris Modules
-         self.modules = ['_boot', '_onewire', '_thread', '_webrepl', 'ak8963', 'apa102', 'apa106', 'array', 'binascii', 'btree', 'builtins', 'upip', #do upip early
 @@ -94,9 +94,9 @@ class Stubber():
              if self.include_nested:
                  self.include_nested = gc.mem_free() > 3200
@@ -43,3 +41,6 @@ index cb5765b..17896ae 100644
          if '/' in module_name:
              #for nested modules
              self.ensure_folder(file_name)
+-- 
+2.22.0
+
-- 
2.22.0

