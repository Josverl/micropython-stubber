# This is a basic workflow to help you get started with Actions

name: get-frozen

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # job prepare sets everything up 
  prepare:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout 
        uses: actions/checkout@v2
        with:
          path: micropython-stubber

      - name: Checkout stubs repo
        uses: actions/checkout@v2
        with:
          repository: josverl/micropython-stubs
          path: micropython-stubs

      - name: Checkout stubs repo
        uses: actions/checkout@v2
        with:
          repository: micropython/micropython-lib
          path: micropython-lib

      - name: Checkout micropython
        uses: actions/checkout@v2
        with:
          repository: micropython/micropython
          path: micropython
          fetch-depth: 0

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install python depedencies
        run: |
          cd ${{github.workspace}}/micropython-stubber
          python -m pip install --upgrade pip
          pip install pytest pylint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi          


  # build needs prepare to be done first
  freeze_mpy:
    needs: [prepare]
    strategy:
      matrix:
        version: ['v1.10','v1.11','v1.12']

    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: checkout firmware version
        run: |
          cd ${{github.workspace}}/micropython
          git checkout tags/${{ matrix.version }}
      - name: get frozem mpy
        run: |
          cd ${{github.workspace}}/micropython-stubber
          python src/get_mpy.py

  