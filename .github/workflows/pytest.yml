# This workflow will :
# - test the workstation scripts
# - test the createstubs on  multiple micropyton linux versions
# - test the minified createstubs on  multiple micropyton linux versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: pytest
on:
    workflow_dispatch:
    pull_request:
        branches: [main]

    push:
        branches: [main, dev/*, feat/*, fix/*]
        paths:
            - .github/workflows/pytest.yml
            - "src/stubber/**"
            - "tests/**"
            - "**/pyproject.toml"
            - "**/poetry.lock"

env:
    JUPYTER_PLATFORM_DIRS: "1"
    # fix:  DeprecationWarning: Jupyter is migrating its paths to use standard platformdirs

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    test_stubber:
        name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}

        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
                include: # for testing
                    - os: ubuntu-latest
                      python-version: "3.10"
                exclude:
                    - os: macos-latest
                      python-version: "3.9" # avoid black install problem for this version
                    - os: macos-latest
                      python-version: "3.10" # avoid black install problem for this version

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  # Number of commits to fetch. 0 indicates all history for all branches and tags.

            - uses: testspace-com/setup-testspace@v1
              with:
                  domain: josverl

            #----------------------------------------------
            # poetry is not in the default image
            #----------------------------------------------
            - name: Install poetry
              run: pipx install poetry==1.3.1

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}
                  #   cache: "poetry"

            #----------------------------------------------
            # install project
            #----------------------------------------------
            - name: Install test dependencies
              run: poetry install --with test

            #----------------------------------------------
            # stubber clone
            # repos needed for tests
            #----------------------------------------------
            - name: stubber clone
              run: poetry run stubber clone --add-stubs

            - name: Test stubber
              run: |
                  poetry run coverage erase
                  poetry run coverage run -m pytest -m stubber
            #----------------------------------------------
            # upload coverage stats
            # .XML  to Codecov
            #----------------------------------------------

            - name: create coverage report
              if: always()
              continue-on-error: true
              run: |
                  poetry run coverage xml -o results/coverage-stubber-${{ matrix.python-version }}-${{ matrix.os }}.xml

            - name: Upload coverage-stubber-*.xml to Codecov
              if: always() # ignore previous error
              uses: codecov/codecov-action@v4
              with:
                  file: results/coverage-stubber-${{ matrix.python-version }}-${{ matrix.os }}.xml
                  flags: stubber
                  token: ${{ secrets.CODECOV_TOKEN }}
                  fail_ci_if_error: false

            #----------------------------------------------

            - name: Push result to Testspace server
              if: always() # ignore previous error
              run: |
                  testspace [tests/${{ matrix.os }}/Python_${{ matrix.python-version }}]results/*.xml --link codecov

            - uses: actions/upload-artifact@v4
              if: always() # ignore previous error
              with:
                  path: results/
                  name: results-stubber-${{ matrix.python-version }}-${{ matrix.os }}
