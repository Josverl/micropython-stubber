{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "run createstubs",
            "detail": "run createstubs in linux port",
            "type": "shell",
            "windows": {
                "command": "ubuntu run MICROPYPATH=./src/stubber/board ./tests/tools/ubuntu_20_04/micropython_v1_21_0 src/stubber/board/createstubs.py"
            },
            "linux": {
                "command": "MICROPYPATH=./src/stubber/board ./tests/tools/ubuntu_20_04/micropython_v1_21_0 src/stubber/board/createstubs.py"
            },
            "problemMatcher": []
        },
        {
            "label": "run createstubs_db",
            "detail": "run createstubs_db in linux port",
            "type": "shell",
            "windows": {
                "command": "ubuntu run MICROPYPATH=./src/stubber/board ./tests/tools/ubuntu_20_04/micropython_v1_21_0 src/stubber/board/createstubs_db.py"
            },
            "linux": {
                "command": "MICROPYPATH=./src/stubber/board ./tests/tools/ubuntu_20_04/micropython_v1_21_0 src/stubber/board/createstubs_db.py"
            },
            "problemMatcher": []
        },
        {
            "label": "mpy-cross",
            "detail": "mpy-cross compile current file",
            "type": "shell",
            "command": "python -m mpy_cross ${file} -O3",
            "problemMatcher": [],
            "group": "build"
        },
        {
            "label": "Sphinx: build documentation",
            "detail": "make clean html",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/docs"
            },
            "command": "${workspaceFolder}/.venv/Scripts/Activate.ps1;&./make.bat clean;&./make.bat html",
            "linux": "make clean html"
        },
        {
            "label": "coverage",
            "detail": "run coverage for all tests",
            "type": "shell",
            "command": "poetry run coverage run -m pytest tests -m 'not basicgit' --junitxml=results/test-results.xml"
        },
        {
            "label": "coverage html",
            "detail": "update coverage html report",
            "type": "shell",
            "command": "poetry run coverage html",
            "problemMatcher": []
        },
        {
            "label": "coverage ALL",
            "detail": "run coverage and create html report and .lcov file",
            "type": "shell",
            "command": "poetry run coverage lcov -o results/coverage.lcov",
            "dependsOn": [
                "coverage",
                "coverage html"
            ],
            "dependsOrder": "sequence"
        },
        {
            "label": "Autoflake",
            "detail": "remove unused imports",
            "type": "shell",
            "command": "autoflake src -r --in-place --remove-all-unused-imports --ignore-init-module-import"
        },
        // {
        //     "type": "austin",
        //     "label": "Profile tests",
        //     "command": [
        //         "poetry",
        //         "run"
        //     ],
        //     "args": [
        //         "python",
        //         "-m",
        //         "pytest"
        //     ]
        // }
    ]
}